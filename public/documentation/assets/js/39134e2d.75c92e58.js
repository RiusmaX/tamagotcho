"use strict";(globalThis.webpackChunkdocumentation=globalThis.webpackChunkdocumentation||[]).push([[144],{8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>a});var s=i(6540);const r={},t=s.createContext(r);function c(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(t.Provider,{value:n},e.children)}},9367:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"architecture/solid-principles","title":"Principes SOLID","description":"Le projet Tamagotcho applique rigoureusement les principes SOLID pour garantir une architecture maintenable et \xe9volutive.","source":"@site/docs/architecture/solid-principles.md","sourceDirName":"architecture","slug":"/architecture/solid-principles","permalink":"/documentation/architecture/solid-principles","draft":false,"unlisted":false,"editUrl":"https://github.com/RiusmaX/tamagotcho/tree/master/documentation/docs/architecture/solid-principles.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Configuration Vercel","permalink":"/documentation/vercel-configuration"},"next":{"title":"Clean Architecture","permalink":"/documentation/architecture/clean-architecture"}}');var r=i(4848),t=i(8453);const c={sidebar_position:1},a="Principes SOLID",l={},d=[{value:"Vue d&#39;ensemble des principes",id:"vue-densemble-des-principes",level:2},{value:"\ud83c\udfaf Single Responsibility Principle (SRP)",id:"-single-responsibility-principle-srp",level:2},{value:"D\xe9finition",id:"d\xe9finition",level:3},{value:"Application dans Tamagotcho",id:"application-dans-tamagotcho",level:3},{value:"Composants UI",id:"composants-ui",level:4},{value:"Services",id:"services",level:4},{value:"Exemples concrets",id:"exemples-concrets",level:3},{value:"\ud83d\udd13 Open/Closed Principle (OCP)",id:"-openclosed-principle-ocp",level:2},{value:"D\xe9finition",id:"d\xe9finition-1",level:3},{value:"Application dans Tamagotcho",id:"application-dans-tamagotcho-1",level:3},{value:"Extension via Props",id:"extension-via-props",level:4},{value:"Ajout de nouveaux styles sans modification",id:"ajout-de-nouveaux-styles-sans-modification",level:4},{value:"B\xe9n\xe9fices",id:"b\xe9n\xe9fices",level:3},{value:"\ud83d\udd04 Liskov Substitution Principle (LSP)",id:"-liskov-substitution-principle-lsp",level:2},{value:"D\xe9finition",id:"d\xe9finition-2",level:3},{value:"Application dans Tamagotcho",id:"application-dans-tamagotcho-2",level:3},{value:"Cards interchangeables",id:"cards-interchangeables",level:4},{value:"B\xe9n\xe9fices",id:"b\xe9n\xe9fices-1",level:3},{value:"\ud83c\udf9b\ufe0f Interface Segregation Principle (ISP)",id:"\ufe0f-interface-segregation-principle-isp",level:2},{value:"D\xe9finition",id:"d\xe9finition-3",level:3},{value:"Application dans Tamagotcho",id:"application-dans-tamagotcho-3",level:3},{value:"Interfaces sp\xe9cialis\xe9es",id:"interfaces-sp\xe9cialis\xe9es",level:4},{value:"Comparaison avec une mauvaise pratique",id:"comparaison-avec-une-mauvaise-pratique",level:4},{value:"B\xe9n\xe9fices",id:"b\xe9n\xe9fices-2",level:3},{value:"\ud83d\udd0c Dependency Inversion Principle (DIP)",id:"-dependency-inversion-principle-dip",level:2},{value:"D\xe9finition",id:"d\xe9finition-4",level:3},{value:"Application dans Tamagotcho",id:"application-dans-tamagotcho-4",level:3},{value:"D\xe9pendances vers des interfaces TypeScript",id:"d\xe9pendances-vers-des-interfaces-typescript",level:4},{value:"Architecture en couches",id:"architecture-en-couches",level:4},{value:"Injection de d\xe9pendances",id:"injection-de-d\xe9pendances",level:4},{value:"B\xe9n\xe9fices",id:"b\xe9n\xe9fices-3",level:3},{value:"Checklist d&#39;impl\xe9mentation",id:"checklist-dimpl\xe9mentation",level:2},{value:"Ressources",id:"ressources",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"principes-solid",children:"Principes SOLID"})}),"\n",(0,r.jsxs)(n.p,{children:["Le projet Tamagotcho applique rigoureusement les ",(0,r.jsx)(n.strong,{children:"principes SOLID"})," pour garantir une architecture maintenable et \xe9volutive."]}),"\n",(0,r.jsx)(n.h2,{id:"vue-densemble-des-principes",children:"Vue d'ensemble des principes"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Principe"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"B\xe9n\xe9fice"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"S"})," - Single Responsibility"]}),(0,r.jsx)(n.td,{children:"Chaque composant a une seule responsabilit\xe9"}),(0,r.jsx)(n.td,{children:"Facilite la maintenance"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"O"})," - Open/Closed"]}),(0,r.jsx)(n.td,{children:"Ouvert \xe0 l'extension, ferm\xe9 \xe0 la modification"}),(0,r.jsx)(n.td,{children:"\xc9volutivit\xe9 sans risque"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"L"})," - Liskov Substitution"]}),(0,r.jsx)(n.td,{children:"Les sous-types remplacent leurs types de base"}),(0,r.jsx)(n.td,{children:"Coh\xe9rence et fiabilit\xe9"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"I"})," - Interface Segregation"]}),(0,r.jsx)(n.td,{children:"Interfaces sp\xe9cifiques et focalis\xe9es"}),(0,r.jsx)(n.td,{children:"Couplage faible"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"D"})," - Dependency Inversion"]}),(0,r.jsx)(n.td,{children:"D\xe9pendre d'abstractions, pas d'impl\xe9mentations"}),(0,r.jsx)(n.td,{children:"Flexibilit\xe9 architecturale"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"-single-responsibility-principle-srp",children:"\ud83c\udfaf Single Responsibility Principle (SRP)"}),"\n",(0,r.jsx)(n.h3,{id:"d\xe9finition",children:"D\xe9finition"}),"\n",(0,r.jsxs)(n.p,{children:["Chaque composant, fonction ou classe doit avoir ",(0,r.jsx)(n.strong,{children:"une seule raison de changer"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"application-dans-tamagotcho",children:"Application dans Tamagotcho"}),"\n",(0,r.jsx)(n.h4,{id:"composants-ui",children:"Composants UI"}),"\n",(0,r.jsx)(n.p,{children:"Chaque composant a une responsabilit\xe9 unique et bien d\xe9finie :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// \u2705 BON : Responsabilit\xe9 unique\r\nconst Header = () => {\r\n  // Navigation et branding uniquement\r\n  return <nav>...</nav>\r\n}\r\n\r\nconst HeroSection = () => {\r\n  // Section d'accueil avec CTA uniquement\r\n  return <section>...</section>\r\n}\r\n\r\nconst BenefitCard = ({ title, description }: BenefitCardProps) => {\r\n  // Affichage d'un seul avantage\r\n  return <div>...</div>\r\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"services",children:"Services"}),"\n",(0,r.jsx)(n.p,{children:"S\xe9paration claire des responsabilit\xe9s m\xe9tier :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// src/services/monsters/monster-generator.ts\r\n// Responsabilit\xe9 unique : g\xe9n\xe9rer des traits al\xe9atoires\r\nexport function generateRandomTraits(): MonsterTraits {\r\n  // Logique de g\xe9n\xe9ration uniquement\r\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"exemples-concrets",children:"Exemples concrets"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Composant"}),(0,r.jsx)(n.th,{children:"Responsabilit\xe9 unique"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Header"})}),(0,r.jsx)(n.td,{children:"Navigation et branding"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"HeroSection"})}),(0,r.jsx)(n.td,{children:"Section d'accueil avec CTA"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"BenefitCard"})}),(0,r.jsx)(n.td,{children:"Affichage d'un avantage"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"MonsterCard"})}),(0,r.jsx)(n.td,{children:"Affichage d'une cr\xe9ature"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"monster-generator.ts"})}),(0,r.jsx)(n.td,{children:"G\xe9n\xe9ration de traits al\xe9atoires"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"-openclosed-principle-ocp",children:"\ud83d\udd13 Open/Closed Principle (OCP)"}),"\n",(0,r.jsx)(n.h3,{id:"d\xe9finition-1",children:"D\xe9finition"}),"\n",(0,r.jsxs)(n.p,{children:["Les entit\xe9s logicielles doivent \xeatre ",(0,r.jsx)(n.strong,{children:"ouvertes \xe0 l'extension, ferm\xe9es \xe0 la modification"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"application-dans-tamagotcho-1",children:"Application dans Tamagotcho"}),"\n",(0,r.jsx)(n.h4,{id:"extension-via-props",children:"Extension via Props"}),"\n",(0,r.jsx)(n.p,{children:"Les composants acceptent de nouvelles configurations sans modification du code :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Composant ouvert \xe0 l'extension\r\nfunction Button ({\r\n  children = 'Click me',\r\n  onClick,\r\n  size = 'md',\r\n  variant = 'primary', // Nouvelles variantes facilement ajoutables\r\n  disabled = false\r\n}: {\r\n  children: React.ReactNode\r\n  onClick?: () => void\r\n  size?: 'sm' | 'md' | 'lg' | 'xl' // Extension facile\r\n  variant?: 'primary' | 'ghost' | 'underline' | 'outline'\r\n  disabled?: boolean\r\n}): React.ReactNode\n"})}),"\n",(0,r.jsx)(n.h4,{id:"ajout-de-nouveaux-styles-sans-modification",children:"Ajout de nouveaux styles sans modification"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Ajout d'une nouvelle taille sans modifier le composant\r\n// Il suffit d'\xe9tendre le type et la fonction getSize()\r\nsize?: 'sm' | 'md' | 'lg' | 'xl' | 'xxl' // Extension\n"})}),"\n",(0,r.jsx)(n.h3,{id:"b\xe9n\xe9fices",children:"B\xe9n\xe9fices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Nouvelles fonctionnalit\xe9s sans risque de r\xe9gression"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Code existant stable et test\xe9"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 \xc9volution progressive du projet"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-liskov-substitution-principle-lsp",children:"\ud83d\udd04 Liskov Substitution Principle (LSP)"}),"\n",(0,r.jsx)(n.h3,{id:"d\xe9finition-2",children:"D\xe9finition"}),"\n",(0,r.jsxs)(n.p,{children:["Les objets d'un programme doivent pouvoir \xeatre ",(0,r.jsx)(n.strong,{children:"remplac\xe9s par des instances de leurs sous-types"})," sans alt\xe9rer le bon fonctionnement du programme."]}),"\n",(0,r.jsx)(n.h3,{id:"application-dans-tamagotcho-2",children:"Application dans Tamagotcho"}),"\n",(0,r.jsx)(n.h4,{id:"cards-interchangeables",children:"Cards interchangeables"}),"\n",(0,r.jsx)(n.p,{children:"Toutes les cards suivent des interfaces coh\xe9rentes :"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// BenefitCard peut \xeatre remplac\xe9e par MonsterCard ou ActionCard\r\n// sans casser l'application car elles respectent les m\xeames contrats\r\n\r\ninterface CardProps {\r\n  title: string\r\n  description?: string\r\n  className?: string\r\n}\r\n\r\n// Toutes les cards peuvent \xeatre utilis\xe9es de mani\xe8re coh\xe9rente\r\n<BenefitCard {...props} />\r\n<MonsterCard {...props} />\r\n<ActionCard {...props} />\n"})}),"\n",(0,r.jsx)(n.h3,{id:"b\xe9n\xe9fices-1",children:"B\xe9n\xe9fices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Composants pr\xe9dictibles et coh\xe9rents"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Facilite les tests unitaires"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 R\xe9duction des bugs lors des substitutions"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-interface-segregation-principle-isp",children:"\ud83c\udf9b\ufe0f Interface Segregation Principle (ISP)"}),"\n",(0,r.jsx)(n.h3,{id:"d\xe9finition-3",children:"D\xe9finition"}),"\n",(0,r.jsx)(n.p,{children:"Les clients ne doivent pas d\xe9pendre d'interfaces qu'ils n'utilisent pas."}),"\n",(0,r.jsx)(n.h3,{id:"application-dans-tamagotcho-3",children:"Application dans Tamagotcho"}),"\n",(0,r.jsx)(n.h4,{id:"interfaces-sp\xe9cialis\xe9es",children:"Interfaces sp\xe9cialis\xe9es"}),"\n",(0,r.jsxs)(n.p,{children:["Chaque type a des interfaces focalis\xe9es dans ",(0,r.jsx)(n.code,{children:"src/types/components.ts"})," :"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// \u2705 BON : Interfaces sp\xe9cifiques et focalis\xe9es\r\n\r\n// Simple \xe9l\xe9ment de navigation\r\ninterface NavigationItem {\r\n  label: string\r\n  href: string\r\n}\r\n\r\n// Props sp\xe9cifiques aux cartes d'avantages\r\ninterface BenefitCardProps {\r\n  title: string\r\n  description: string\r\n  color: string\r\n}\r\n\r\n// Props pour les cartes de cr\xe9atures\r\ninterface MonsterCardProps {\r\n  name: string\r\n  level: number\r\n  traits: MonsterTraits\r\n}\r\n\r\n// Donn\xe9es du formulaire newsletter (s\xe9par\xe9es)\r\ninterface NewsletterFormData {\r\n  email: string\r\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"comparaison-avec-une-mauvaise-pratique",children:"Comparaison avec une mauvaise pratique"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// \u274c MAUVAIS : Interface trop large\r\ninterface UniversalCardProps {\r\n  title: string\r\n  description?: string\r\n  color?: string\r\n  name?: string\r\n  level?: number\r\n  traits?: MonsterTraits\r\n  email?: string\r\n  // Trop de propri\xe9t\xe9s optionnelles inutilis\xe9es\r\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"b\xe9n\xe9fices-2",children:"B\xe9n\xe9fices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Code plus clair et maintenable"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Pas de d\xe9pendances inutiles"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Types TypeScript plus pr\xe9cis"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-dependency-inversion-principle-dip",children:"\ud83d\udd0c Dependency Inversion Principle (DIP)"}),"\n",(0,r.jsx)(n.h3,{id:"d\xe9finition-4",children:"D\xe9finition"}),"\n",(0,r.jsxs)(n.p,{children:["Les modules de haut niveau ne doivent pas d\xe9pendre des modules de bas niveau. Les deux doivent d\xe9pendre d'",(0,r.jsx)(n.strong,{children:"abstractions"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"application-dans-tamagotcho-4",children:"Application dans Tamagotcho"}),"\n",(0,r.jsx)(n.h4,{id:"d\xe9pendances-vers-des-interfaces-typescript",children:"D\xe9pendances vers des interfaces TypeScript"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// \u2705 BON : D\xe9pendance vers une abstraction\r\nimport type { MonsterTraits } from '@/types/monster'\r\n\r\nfunction PixelMonster({ traits }: { traits: MonsterTraits }) {\r\n  // Le composant d\xe9pend de l'interface MonsterTraits\r\n  // pas d'une impl\xe9mentation concr\xe8te\r\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"architecture-en-couches",children:"Architecture en couches"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502   Presentation Layer            \u2502\r\n\u2502   (Components)                  \u2502\r\n\u2502   D\xe9pend de \u2193                   \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502   Application Layer             \u2502\r\n\u2502   (Pages Next.js)               \u2502\r\n\u2502   D\xe9pend de \u2193                   \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502   Domain Layer                  \u2502\r\n\u2502   (Types, Interfaces)           \u2502\r\n\u2502   D\xe9pend de \u2193                   \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502   Infrastructure Layer          \u2502\r\n\u2502   (DB, Auth, Services)          \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,r.jsx)(n.h4,{id:"injection-de-d\xe9pendances",children:"Injection de d\xe9pendances"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Service injectable facilement\r\ninterface MonsterService {\r\n  generateTraits(): MonsterTraits\r\n  createMonster(name: string): Promise<Monster>\r\n}\r\n\r\n// Le composant d\xe9pend de l'abstraction\r\nfunction CreateMonster({ service }: { service: MonsterService }) {\r\n  // Facile \xe0 tester avec un mock du service\r\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"b\xe9n\xe9fices-3",children:"B\xe9n\xe9fices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Testabilit\xe9 maximale (mocks faciles)"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Flexibilit\xe9 pour changer d'impl\xe9mentation"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 D\xe9couplage des couches"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"checklist-dimpl\xe9mentation",children:"Checklist d'impl\xe9mentation"}),"\n",(0,r.jsx)(n.p,{children:"Avant d'ajouter du nouveau code, v\xe9rifiez :"}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"SRP"})," : Le composant/fonction a-t-il une seule responsabilit\xe9 ?"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"OCP"})," : Peut-on \xe9tendre sans modifier le code existant ?"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"LSP"})," : Les types peuvent-ils \xeatre substitu\xe9s sans casser le code ?"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"ISP"})," : L'interface est-elle focalis\xe9e et sp\xe9cifique ?"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"DIP"})," : D\xe9pend-on d'abstractions plut\xf4t que d'impl\xe9mentations ?"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"ressources",children:"Ressources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.digitalocean.com/community/conceptual-articles/s-o-l-i-d-the-first-five-principles-of-object-oriented-design",children:"SOLID Principles Explained"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882",children:"Clean Code by Robert C. Martin"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"./clean-architecture",children:"Architecture SOLID du projet"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);