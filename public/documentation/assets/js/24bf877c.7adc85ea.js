"use strict";(globalThis.webpackChunkdocumentation=globalThis.webpackChunkdocumentation||[]).push([[184],{8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(6540);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}},8814:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"architecture/clean-architecture","title":"Clean Architecture","description":"Le projet Tamagotcho impl\xe9mente les principes de Clean Architecture pour garantir une s\xe9paration claire des responsabilit\xe9s et une testabilit\xe9 optimale.","source":"@site/docs/architecture/clean-architecture.md","sourceDirName":"architecture","slug":"/architecture/clean-architecture","permalink":"/documentation/architecture/clean-architecture","draft":false,"unlisted":false,"editUrl":"https://github.com/RiusmaX/tamagotcho/tree/master/documentation/docs/architecture/clean-architecture.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Principes SOLID","permalink":"/documentation/architecture/solid-principles"},"next":{"title":"Composants UI","permalink":"/documentation/components/ui-components"}}');var s=r(4848),i=r(8453);const o={sidebar_position:2},a="Clean Architecture",c={},l=[{value:"Vue d&#39;ensemble de l&#39;architecture",id:"vue-densemble-de-larchitecture",level:2},{value:"R\xe8gle de d\xe9pendance",id:"r\xe8gle-de-d\xe9pendance",level:2},{value:"\u2705 BON",id:"-bon",level:3},{value:"\u274c MAUVAIS",id:"-mauvais",level:3},{value:"Couche 1 : Presentation Layer",id:"couche-1--presentation-layer",level:2},{value:"Responsabilit\xe9s",id:"responsabilit\xe9s",level:3},{value:"Structure de fichiers",id:"structure-de-fichiers",level:3},{value:"Bonnes pratiques",id:"bonnes-pratiques",level:3},{value:"Couche 2 : Application Layer",id:"couche-2--application-layer",level:2},{value:"Responsabilit\xe9s",id:"responsabilit\xe9s-1",level:3},{value:"Structure de fichiers",id:"structure-de-fichiers-1",level:3},{value:"Server Actions",id:"server-actions",level:3},{value:"Couche 3 : Domain Layer",id:"couche-3--domain-layer",level:2},{value:"Responsabilit\xe9s",id:"responsabilit\xe9s-2",level:3},{value:"Structure de fichiers",id:"structure-de-fichiers-2",level:3},{value:"Logique m\xe9tier pure",id:"logique-m\xe9tier-pure",level:3},{value:"Types et constantes",id:"types-et-constantes",level:3},{value:"Couche 4 : Infrastructure Layer",id:"couche-4--infrastructure-layer",level:2},{value:"Responsabilit\xe9s",id:"responsabilit\xe9s-3",level:3},{value:"Structure de fichiers",id:"structure-de-fichiers-3",level:3},{value:"Connexion \xe0 la base de donn\xe9es",id:"connexion-\xe0-la-base-de-donn\xe9es",level:3},{value:"Mod\xe8les de base de donn\xe9es",id:"mod\xe8les-de-base-de-donn\xe9es",level:3},{value:"Flux de donn\xe9es typique",id:"flux-de-donn\xe9es-typique",level:2},{value:"Cr\xe9ation d&#39;un monstre",id:"cr\xe9ation-dun-monstre",level:3},{value:"Code correspondant",id:"code-correspondant",level:3},{value:"B\xe9n\xe9fices de cette architecture",id:"b\xe9n\xe9fices-de-cette-architecture",level:2},{value:"\u2705 Testabilit\xe9",id:"-testabilit\xe9",level:3},{value:"\u2705 Maintenabilit\xe9",id:"-maintenabilit\xe9",level:3},{value:"\u2705 R\xe9utilisabilit\xe9",id:"-r\xe9utilisabilit\xe9",level:3},{value:"Checklist d&#39;impl\xe9mentation",id:"checklist-dimpl\xe9mentation",level:2},{value:"Ressources",id:"ressources",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"clean-architecture",children:"Clean Architecture"})}),"\n",(0,s.jsxs)(n.p,{children:["Le projet Tamagotcho impl\xe9mente les principes de ",(0,s.jsx)(n.strong,{children:"Clean Architecture"})," pour garantir une s\xe9paration claire des responsabilit\xe9s et une testabilit\xe9 optimale."]}),"\n",(0,s.jsx)(n.h2,{id:"vue-densemble-de-larchitecture",children:"Vue d'ensemble de l'architecture"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502                  Presentation Layer                   \u2502\r\n\u2502              (src/components/, src/app/)              \u2502\r\n\u2502                                                        \u2502\r\n\u2502  - Composants React (UI uniquement)                   \u2502\r\n\u2502  - Pages Next.js (orchestration)                      \u2502\r\n\u2502  - Aucune logique m\xe9tier                              \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n                     \u2502 D\xe9pend de \u2193\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502                 Application Layer                     \u2502\r\n\u2502                  (src/app/, src/actions/)             \u2502\r\n\u2502                                                        \u2502\r\n\u2502  - Routing Next.js                                    \u2502\r\n\u2502  - Server Actions                                     \u2502\r\n\u2502  - Coordination des flux                              \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n                     \u2502 D\xe9pend de \u2193\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502                   Domain Layer                        \u2502\r\n\u2502            (src/types/, src/services/)                \u2502\r\n\u2502                                                        \u2502\r\n\u2502  - Types et interfaces m\xe9tier                         \u2502\r\n\u2502  - Logique m\xe9tier pure (g\xe9n\xe9ration de monstres)       \u2502\r\n\u2502  - R\xe8gles de validation                               \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n                     \u2502 D\xe9pend de \u2193\r\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n\u2502                Infrastructure Layer                   \u2502\r\n\u2502              (src/db/, src/lib/)                      \u2502\r\n\u2502                                                        \u2502\r\n\u2502  - Connexion MongoDB                                  \u2502\r\n\u2502  - Configuration Better Auth                          \u2502\r\n\u2502  - APIs externes                                      \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsx)(n.h2,{id:"r\xe8gle-de-d\xe9pendance",children:"R\xe8gle de d\xe9pendance"}),"\n",(0,s.jsx)(n.admonition,{title:"R\xe8gle fondamentale",type:"danger",children:(0,s.jsxs)(n.p,{children:["Les d\xe9pendances doivent ",(0,s.jsx)(n.strong,{children:"toujours pointer vers l'int\xe9rieur"})," (UI \u2192 Application \u2192 Domain). Jamais dans le sens inverse !"]})}),"\n",(0,s.jsx)(n.h3,{id:"-bon",children:"\u2705 BON"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Composant UI d\xe9pend du type du domaine\r\nimport type { MonsterTraits } from '@/types/monster'\r\n\r\nfunction PixelMonster({ traits }: { traits: MonsterTraits }) {\r\n  // OK : Presentation \u2192 Domain\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"-mauvais",children:"\u274c MAUVAIS"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// \u274c Le domaine ne doit JAMAIS d\xe9pendre de l'UI\r\n// src/types/monster.ts\r\nimport { PixelMonster } from '@/components/pixel-monster'\r\n// ERREUR : Domain \u2192 Presentation\n"})}),"\n",(0,s.jsx)(n.h2,{id:"couche-1--presentation-layer",children:"Couche 1 : Presentation Layer"}),"\n",(0,s.jsx)(n.h3,{id:"responsabilit\xe9s",children:"Responsabilit\xe9s"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Affichage de l'interface utilisateur"}),"\n",(0,s.jsx)(n.li,{children:"Gestion des \xe9v\xe9nements utilisateur"}),"\n",(0,s.jsx)(n.li,{children:"Aucune logique m\xe9tier"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"structure-de-fichiers",children:"Structure de fichiers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"src/\r\n\u251c\u2500\u2500 components/\r\n\u2502   \u251c\u2500\u2500 button.tsx              # Composant r\xe9utilisable\r\n\u2502   \u251c\u2500\u2500 header.tsx              # Navigation\r\n\u2502   \u251c\u2500\u2500 hero-section.tsx        # Section h\xe9ro\r\n\u2502   \u251c\u2500\u2500 monsters/\r\n\u2502   \u2502   \u251c\u2500\u2500 pixel-monster.tsx   # Affichage d'un monstre\r\n\u2502   \u2502   \u2514\u2500\u2500 monster-card.tsx    # Carte de monstre\r\n\u2502   \u2514\u2500\u2500 dashboard/\r\n\u2502       \u251c\u2500\u2500 stats-card.tsx      # Carte de statistiques\r\n\u2502       \u2514\u2500\u2500 user-profile-card.tsx\r\n\u2514\u2500\u2500 app/\r\n    \u251c\u2500\u2500 page.tsx                # Page d'accueil\r\n    \u251c\u2500\u2500 dashboard/\r\n    \u2502   \u2514\u2500\u2500 page.tsx            # Page dashboard\r\n    \u2514\u2500\u2500 creature/\r\n        \u2514\u2500\u2500 [id]/\r\n            \u2514\u2500\u2500 page.tsx        # Page d\xe9tail cr\xe9ature\n"})}),"\n",(0,s.jsx)(n.h3,{id:"bonnes-pratiques",children:"Bonnes pratiques"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'// \u2705 Composant pur sans logique m\xe9tier\r\nfunction MonsterCard({ monster }: { monster: DBMonster }) {\r\n  return (\r\n    <div className="monster-card">\r\n      <h3>{monster.name}</h3>\r\n      <PixelMonster traits={JSON.parse(monster.traits)} />\r\n      <p>Level {monster.level}</p>\r\n    </div>\r\n  )\r\n}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// \u274c \xc9viter la logique m\xe9tier dans les composants\r\nfunction MonsterCard({ monster }: { monster: DBMonster }) {\r\n  // \u274c MAUVAIS : Logique de calcul dans le composant\r\n  const nextLevel = Math.floor(monster.level * 1.5 + 10)\r\n  const requiredXP = nextLevel * 100\r\n  \r\n  // \u274c MAUVAIS : Appel direct \xe0 la DB\r\n  const { data } = await fetch('/api/monsters')\r\n  \r\n  return <div>...</div>\r\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"couche-2--application-layer",children:"Couche 2 : Application Layer"}),"\n",(0,s.jsx)(n.h3,{id:"responsabilit\xe9s-1",children:"Responsabilit\xe9s"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Coordination des flux applicatifs"}),"\n",(0,s.jsx)(n.li,{children:"Gestion du routing"}),"\n",(0,s.jsx)(n.li,{children:"Server Actions Next.js"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"structure-de-fichiers-1",children:"Structure de fichiers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"src/\r\n\u251c\u2500\u2500 app/\r\n\u2502   \u251c\u2500\u2500 layout.tsx              # Layout racine\r\n\u2502   \u2514\u2500\u2500 api/\r\n\u2502       \u2514\u2500\u2500 auth/\r\n\u2502           \u2514\u2500\u2500 [...all]/\r\n\u2502               \u2514\u2500\u2500 route.ts    # Routes d'authentification\r\n\u2514\u2500\u2500 actions/\r\n    \u251c\u2500\u2500 monsters.actions.ts     # Actions pour les monstres\r\n    \u2514\u2500\u2500 navigation.actions.ts   # Actions de navigation\n"})}),"\n",(0,s.jsx)(n.h3,{id:"server-actions",children:"Server Actions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// src/actions/monsters.actions.ts\r\n'use server'\r\n\r\nimport { auth } from '@/lib/auth'\r\nimport { MonsterModel } from '@/db/models/monster.model'\r\nimport { generateRandomTraits } from '@/services/monsters/monster-generator'\r\n\r\nexport async function createMonster(name: string) {\r\n  // Coordination : Auth + Service + DB\r\n  const session = await auth()\r\n  if (!session?.user?.id) {\r\n    throw new Error('Non authentifi\xe9')\r\n  }\r\n\r\n  const traits = generateRandomTraits() // Service du domaine\r\n  \r\n  const monster = await MonsterModel.create({\r\n    name,\r\n    traits: JSON.stringify(traits),\r\n    ownerId: session.user.id,\r\n    level: 1,\r\n    state: 'happy'\r\n  })\r\n\r\n  return monster\r\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"couche-3--domain-layer",children:"Couche 3 : Domain Layer"}),"\n",(0,s.jsx)(n.h3,{id:"responsabilit\xe9s-2",children:"Responsabilit\xe9s"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Types et interfaces m\xe9tier"}),"\n",(0,s.jsx)(n.li,{children:"Logique m\xe9tier pure (sans d\xe9pendances externes)"}),"\n",(0,s.jsx)(n.li,{children:"R\xe8gles de validation"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"structure-de-fichiers-2",children:"Structure de fichiers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"src/\r\n\u251c\u2500\u2500 types/\r\n\u2502   \u251c\u2500\u2500 monster.ts              # Types et constantes des monstres\r\n\u2502   \u251c\u2500\u2500 components.ts           # Types des composants\r\n\u2502   \u2514\u2500\u2500 forms/\r\n\u2502       \u2514\u2500\u2500 create-monster-form.ts\r\n\u2514\u2500\u2500 services/\r\n    \u2514\u2500\u2500 monsters/\r\n        \u2514\u2500\u2500 monster-generator.ts # G\xe9n\xe9ration de traits\n"})}),"\n",(0,s.jsx)(n.h3,{id:"logique-m\xe9tier-pure",children:"Logique m\xe9tier pure"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// src/services/monsters/monster-generator.ts\r\nimport type { MonsterTraits } from '@/types/monster'\r\n\r\n// \u2705 Fonction pure : pas d'effets de bord\r\nexport function generateRandomTraits(): MonsterTraits {\r\n  const randomPalette = pastelColors[Math.floor(Math.random() * pastelColors.length)]\r\n  const randomAntenna = antennaColors[Math.floor(Math.random() * antennaColors.length)]\r\n  const randomEye = eyeColors[Math.floor(Math.random() * eyeColors.length)]\r\n\r\n  return {\r\n    bodyColor: randomPalette[0],\r\n    accentColor: randomPalette[1],\r\n    eyeColor: randomEye,\r\n    antennaColor: randomAntenna,\r\n    bobbleColor: randomAntenna,\r\n    cheekColor: adjustColorOpacity(randomPalette[0], 0.7),\r\n    bodyStyle: bodyStyles[Math.floor(Math.random() * bodyStyles.length)],\r\n    eyeStyle: eyeStyles[Math.floor(Math.random() * eyeStyles.length)],\r\n    antennaStyle: antennaStyles[Math.floor(Math.random() * antennaStyles.length)],\r\n    accessory: accessories[Math.floor(Math.random() * accessories.length)]\r\n  }\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"types-et-constantes",children:"Types et constantes"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// src/types/monster.ts\r\nexport const MONSTER_STATES = ['happy', 'sad', 'angry', 'hungry', 'sleepy'] as const\r\nexport type MonsterState = typeof MONSTER_STATES[number]\r\n\r\nexport const DEFAULT_MONSTER_LEVEL = 1\r\nexport const DEFAULT_MONSTER_STATE: MonsterState = MONSTER_STATES[0]\r\n\r\nexport interface MonsterTraits {\r\n  bodyColor: string\r\n  accentColor: string\r\n  eyeColor: string\r\n  antennaColor: string\r\n  bobbleColor: string\r\n  cheekColor: string\r\n  bodyStyle: MonsterStyle\r\n  eyeStyle: EyeStyle\r\n  antennaStyle: AntennaStyle\r\n  accessory: AccessoryStyle\r\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"couche-4--infrastructure-layer",children:"Couche 4 : Infrastructure Layer"}),"\n",(0,s.jsx)(n.h3,{id:"responsabilit\xe9s-3",children:"Responsabilit\xe9s"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Connexion aux bases de donn\xe9es"}),"\n",(0,s.jsx)(n.li,{children:"Configuration des services externes"}),"\n",(0,s.jsx)(n.li,{children:"Impl\xe9mentation des adapters"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"structure-de-fichiers-3",children:"Structure de fichiers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"src/\r\n\u251c\u2500\u2500 db/\r\n\u2502   \u251c\u2500\u2500 index.ts                # Connexion MongoDB\r\n\u2502   \u2514\u2500\u2500 models/\r\n\u2502       \u2514\u2500\u2500 monster.model.ts    # Mod\xe8le Mongoose\r\n\u2514\u2500\u2500 lib/\r\n    \u251c\u2500\u2500 auth.ts                 # Configuration Better Auth\r\n    \u251c\u2500\u2500 auth-client.ts          # Client d'auth\r\n    \u2514\u2500\u2500 utils/\r\n        \u251c\u2500\u2500 date.utils.ts\r\n        \u251c\u2500\u2500 label.utils.ts\r\n        \u2514\u2500\u2500 monster.utils.ts\n"})}),"\n",(0,s.jsx)(n.h3,{id:"connexion-\xe0-la-base-de-donn\xe9es",children:"Connexion \xe0 la base de donn\xe9es"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// src/db/index.ts\r\nimport mongoose from 'mongoose'\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI!\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error('MONGODB_URI manquant dans les variables d\\'environnement')\r\n}\r\n\r\nlet cached = global.mongoose\r\n\r\nif (!cached) {\r\n  cached = global.mongoose = { conn: null, promise: null }\r\n}\r\n\r\nexport async function connectDB() {\r\n  if (cached.conn) {\r\n    return cached.conn\r\n  }\r\n\r\n  if (!cached.promise) {\r\n    cached.promise = mongoose.connect(MONGODB_URI).then((mongoose) => {\r\n      return mongoose\r\n    })\r\n  }\r\n\r\n  cached.conn = await cached.promise\r\n  return cached.conn\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"mod\xe8les-de-base-de-donn\xe9es",children:"Mod\xe8les de base de donn\xe9es"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// src/db/models/monster.model.ts\r\nimport mongoose from 'mongoose'\r\nimport type { DBMonster } from '@/types/monster'\r\n\r\nconst monsterSchema = new mongoose.Schema({\r\n  name: { type: String, required: true },\r\n  level: { type: Number, default: 1 },\r\n  traits: { type: String, required: true }, // JSON serialized\r\n  state: { type: String, required: true },\r\n  ownerId: { type: String, required: true },\r\n  createdAt: { type: Date, default: Date.now },\r\n  updatedAt: { type: Date, default: Date.now }\r\n})\r\n\r\nexport const MonsterModel = mongoose.models.Monster || mongoose.model<DBMonster>('Monster', monsterSchema)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"flux-de-donn\xe9es-typique",children:"Flux de donn\xe9es typique"}),"\n",(0,s.jsx)(n.h3,{id:"cr\xe9ation-dun-monstre",children:"Cr\xe9ation d'un monstre"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mermaid",children:'sequenceDiagram\r\n    participant UI as Presentation<br/>(CreateMonsterForm)\r\n    participant Action as Application<br/>(createMonster)\r\n    participant Service as Domain<br/>(generateRandomTraits)\r\n    participant DB as Infrastructure<br/>(MonsterModel)\r\n\r\n    UI->>Action: createMonster("Pikachu")\r\n    Action->>Service: generateRandomTraits()\r\n    Service--\x3e>Action: MonsterTraits\r\n    Action->>DB: MonsterModel.create(...)\r\n    DB--\x3e>Action: DBMonster\r\n    Action--\x3e>UI: Monster cr\xe9\xe9\n'})}),"\n",(0,s.jsx)(n.h3,{id:"code-correspondant",children:"Code correspondant"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// 1. Presentation Layer (UI)\r\nfunction CreateMonsterForm() {\r\n  async function handleSubmit(e: FormEvent) {\r\n    e.preventDefault()\r\n    const name = formData.get('name') as string\r\n    await createMonster(name) // Appel \xe0 l'Application Layer\r\n  }\r\n}\r\n\r\n// 2. Application Layer (Coordination)\r\n'use server'\r\nexport async function createMonster(name: string) {\r\n  const traits = generateRandomTraits() // Domain Layer\r\n  const monster = await MonsterModel.create({ /* ... */ }) // Infrastructure\r\n  return monster\r\n}\r\n\r\n// 3. Domain Layer (Logique m\xe9tier)\r\nexport function generateRandomTraits(): MonsterTraits {\r\n  // Logique pure sans d\xe9pendances\r\n}\r\n\r\n// 4. Infrastructure Layer (Persistance)\r\nexport const MonsterModel = mongoose.model(/* ... */)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"b\xe9n\xe9fices-de-cette-architecture",children:"B\xe9n\xe9fices de cette architecture"}),"\n",(0,s.jsx)(n.h3,{id:"-testabilit\xe9",children:"\u2705 Testabilit\xe9"}),"\n",(0,s.jsx)(n.p,{children:"Chaque couche peut \xeatre test\xe9e ind\xe9pendamment :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Test de la logique m\xe9tier (Domain Layer)\r\ndescribe('generateRandomTraits', () => {\r\n  it('devrait g\xe9n\xe9rer des traits valides', () => {\r\n    const traits = generateRandomTraits()\r\n    expect(traits.bodyColor).toMatch(/^#[0-9A-F]{6}$/i)\r\n    expect(['round', 'square', 'tall', 'wide']).toContain(traits.bodyStyle)\r\n  })\r\n})\n"})}),"\n",(0,s.jsx)(n.h3,{id:"-maintenabilit\xe9",children:"\u2705 Maintenabilit\xe9"}),"\n",(0,s.jsx)(n.p,{children:"Changement de base de donn\xe9es facile (MongoDB \u2192 PostgreSQL) sans toucher au domaine :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Seul l'Infrastructure Layer change\r\n// Domain et Presentation restent identiques\n"})}),"\n",(0,s.jsx)(n.h3,{id:"-r\xe9utilisabilit\xe9",children:"\u2705 R\xe9utilisabilit\xe9"}),"\n",(0,s.jsx)(n.p,{children:"La logique m\xe9tier peut \xeatre r\xe9utilis\xe9e dans diff\xe9rents contextes :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// M\xeame service utilis\xe9 par :\r\n// - API Route\r\n// - Server Action\r\n// - Script CLI\r\nimport { generateRandomTraits } from '@/services/monsters/monster-generator'\n"})}),"\n",(0,s.jsx)(n.h2,{id:"checklist-dimpl\xe9mentation",children:"Checklist d'impl\xe9mentation"}),"\n",(0,s.jsx)(n.p,{children:"Avant d'ajouter du nouveau code :"}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","La couche Presentation ne contient que de l'UI ?"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","La logique m\xe9tier est dans le Domain Layer ?"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Les d\xe9pendances pointent vers l'int\xe9rieur ?"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Aucun appel direct \xe0 la DB depuis l'UI ?"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Les types m\xe9tier sont dans ",(0,s.jsx)(n.code,{children:"src/types/"})," ?"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Les Server Actions coordonnent sans logique m\xe9tier ?"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"ressources",children:"Ressources"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html",children:"Clean Architecture by Robert C. Martin"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"./solid-principles",children:"Principes SOLID"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations",children:"Next.js Server Actions"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);